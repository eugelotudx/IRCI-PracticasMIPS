PROBLEMAS PROPUESTOS PARA ENTREGAR

1.
etiquetas: dato, main
directivas: .data, .byte, .text, .glob
comentarios: "inicializo una posici√≥n de memoria a 3", "debe ser global"

2.
.data 0x10000000
A: .space 80
B: .space 80

3.
.data 0x10001000
palabra1:	.space 4
byte: 		.space 1
		.align 2
palabra2:	.space 4

4.
.data
tres: 		.word 3
dieciseis: 	.byte 0x10
		.align 2
palabra:	.space 4
veinte:		.byte 20

5.
a)
.data
cadena: .ascii "Esto es un problema"

b)
.data
cadena: .byte 0x45, 0x73, 0x74, 0x6f, 0x20, 0x65, 0x73, 0x20, 0x75, 0x6e, 0x20, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x61

c)
.data
cadena: .word 0x6f747345, 0x20736520, 0x70206e75, 0x6c626f72, 0x00616d65

6.
a)
.data
fila1: .word 1,2,3
fila2: .word 4,5,6
fila3: .word 7,8,9

b)
.data
col1: .word: 1,4,7
col2: .word: 2,5,8
col3: .word: 3,6,9

7.
.data 0x10000000
v: .word 10,20,25,500,3
.text
main:
lw $s0, v($2)
addu $2, $2, 0x04
lw $s1, v($2)
addu $2, $2, 0x04
lw $s2, v($2)
addu $2, $2, 0x04
lw $s3, v($2)
addu $2, $2, 0x04
lw $s4, v($2)

8.
.data 0x10000000
v: .word 10,20,25,500,3
direccion: .word 0x10010000

.text
main:
lw $s0, v($2)
addu $2, $2, 0x04
lw $s1, v($2)
addu $2, $2, 0x04
lw $s2, v($2)
addu $2, $2, 0x04
lw $s3, v($2)
addu $2, $2, 0x04
lw $s4, v($2)

andi $2, $2, 0
lw $s5, direccion($2)
sw $s0, 0($s5)
addu, $s5, $s5, 0x04
sw $s1, 0($s5)
addu $s5, $s5, 0x04
sw $s2, 0($s5)
addu $s5, $s5, 0x04
sw $s3, 0($s5)
addu $s5, $s5, 0x04
sw $s4, 0($s5)

9.
.data
palabra: .word 0x10203040

.text
main:
lw $s0, palabra($2)
add $2, $2, 7
sb $s0, palabra($2)
ror $s0, $s0, 8
sub $2, $2, 1
sb $s0, palabra($2)
ror $s0, $s0, 8
sub $2, $2, 1
sb $s0, palabra($2)
ror $s0, $s0, 8
sub $2, $2, 1
sb $s0, palabra($2)

10.
.data
palabra: .word 0x10203040

.text
main:
lw $s0, palabra($2)
lh $s1, palabra($2)
ror $s0, $s0, 16
addi $2, $2, 6
sh $s1, palabra($2)
sub $2, $2, 2
sh $s0, palabra($2)

11.
.data 0x10010002
bytes: .byte  0x10, 0x20, 0x30, 0x40

.data 0x10010100
palabra: .space 4

.text
main:
lb $s0, bytes($2)
sb $s0, palabra($2)
add $2, $2, 1
lb $s0, bytes($2)
sb $s0, palabra($2)
add $2, $2, 1
lb $s0, bytes($2)
sb $s0, palabra($2)
add $2, $2, 1
lb $s0, bytes($2)
sb $s0, palabra($2)


12.
.data  0x10000000
vector: .word 10, 20

.text
main: 
lw $t0,vector($0)
lw $t1,vector+4($0)
add $t0, $t0, $t1
sw $t0, vector+8($0)

13.
.data  0x10000000
num1: .word 18
num2: .word -1215

.data 0x10010000
resultados: .space 8

.text
main: 
lw $s0, num1($0)
li $s3, 5
div $s0, $s3
mflo $s1 # lo almacena el cociente
mfhi $s2 # hi almacena el resto
sw $s1, resultados($0)

lw $s0, num2($0)
li $s3, 5
div $s0, $s3
mflo $s1 # lo almacena el cociente
mfhi $s2 # hi almacena el resto
sw $s1, resultados+4($0)

14.
.data 0x10000000
numero: .word 0xabcd12bd

.text
main:
lw $s0, numero($0)
andi $s0, $s0, 0xfffffebb
sw $s0, numero($0)

15.
.data 0x10000000
numero: .word 0xff0f1235

.text
main:
lw $s0, numero($0)
andi $s0, $s0, 0xfffffffb
ori $s0, $s0, 0x00000140
sw $s0, numero($0)

16.
.data 0x10000000
numero: .word 0x1237

.text
main:
lw $s0, numero($0)
sll $s0, $s0, 5
sw $s0, numero($0)

